name: Tests

on:
  workflow_dispatch: {}
  push:
    branches:
      - main
      # - dev
  pull_request_target:
    branches:
      - main
      - dev

jobs:
  check_pr_source:
    runs-on: ubuntu-latest
    outputs:
      is_fork: ${{ steps.check.outputs.is_fork }}
    steps:
      - id: check
        run: |
          if [ "${{ github.event.pull_request.head.repo.full_name }}" != "${{ github.repository }}" ]; then
            echo "is_fork=true" >> $GITHUB_OUTPUT
          else
            echo "is_fork=false" >> $GITHUB_OUTPUT
          fi

  manual_approval:
    needs: check_pr_source
    runs-on: ubuntu-latest
    if: needs.check_pr_source.outputs.is_fork == 'true'
    steps:
      - name: Require manual approval
        uses: trstringer/manual-approval@v1
        with:
          secret: ${{ github.token }}
          approvers: theeldermillenial,bhatt-deep,xxAVOGADROxx,talhahussain7
          minimum-approvals: 1
          issue-title: "Approval required for PR from fork"
          issue-body: "A fork has submitted a PR. Please review and approve if it's safe to run with access to secrets."

  unit_tests:
    needs: [check_pr_source, manual_approval]
    if: |
      always() &&
      (needs.check_pr_source.outputs.is_fork == 'false' ||
       (needs.check_pr_source.outputs.is_fork == 'true' && needs.manual_approval.result == 'success'))
    name: unit-tests ${{ matrix.python-version }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      max-parallel: 1
      matrix:
        python-version: ["3.10", "3.11"]

    steps:
      - name: Check out code
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.pull_request.head.sha }}
          fetch-depth: 0
      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install nox
        run: |
          pipx install nox
      - name: Run tests with nox
        env:
          DBSYNC_USER: ${{ secrets.DBSYNC_USER }}
          DBSYNC_PASS: ${{ secrets.DBSYNC_PASS }}
          DBSYNC_HOST: ${{ secrets.DBSYNC_HOST }}
          DBSYNC_PORT: ${{ secrets.DBSYNC_PORT }}
          DBSYNC_DB_NAME: ${{ secrets.DBSYNC_DB_NAME }}
          PROJECT_ID: ${{ secrets.PROJECT_ID }}
          NETWORK: ${{ secrets.NETWORK }}
          WALLET_MNEMONIC: ${{ secrets.WALLET_MNEMONIC }}
          AXO_API_KEY: ${{ secrets.AXO_API_KEY }}
        run: |
          nox --reuse-venv=yes --session tests --python ${{ matrix.python-version }}
